Index: src/Entity/User.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace App\\Entity;\n\nuse App\\Repository\\UserRepository;\nuse Doctrine\\DBAL\\Types\\Types;\nuse Doctrine\\ORM\\Mapping\\Column;\nuse Doctrine\\ORM\\Mapping\\Entity;\nuse Doctrine\\ORM\\Mapping\\GeneratedValue;\nuse Doctrine\\ORM\\Mapping\\Id;\nuse Doctrine\\ORM\\Mapping\\Table;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\nuse Symfony\\Component\\Security\\Core\\User\\UserInterface;\nuse Symfony\\Component\\Validator\\Constraints\\NotBlank;\n\n#[Entity(repositoryClass: UserRepository::class)]\n#[Table(name: 'system_user')]\n#[UniqueEntity(fields: 'identifier', message: 'This identifier is already in use')]\nclass User implements UserInterface\n{\n    final public const ROLES\n        = [\n            'user' => 'ROLE_USER',\n            'admin' => 'ROLE_ADMIN',\n        ];\n\n    #[Column, Id, GeneratedValue]\n    private ?int $id = 0;\n\n    #[Column(unique: true)]\n    #[NotBlank(message: 'user.identifier.not_blank')]\n    private string $identifier = '*';\n\n    /**\n     * @var array<string>\n     */\n    #[Column(type: Types::JSON)]\n    private array $roles = [];\n\n    #[Column(length: 100, nullable: true)]\n    private ?string $googleId = null;\n\n    #[Column(nullable: true)]\n    private ?int $gitHubId = null;\n\n    #[Column(nullable: true)]\n    private ?int $gitLabId = null;\n\n    /**\n     * @return array{\n     *     id: integer|null,\n     *     identifier: string|null\n     * }\n     */\n    public function __serialize(): array\n    {\n        return [\n            'id' => $this->id,\n            'identifier' => $this->identifier,\n        ];\n    }\n\n    /**\n     * @param array{\n     *     id: int|null,\n     *     identifier: string|null\n     * } $data\n     */\n    public function __unserialize(array $data): void\n    {\n        $this->id = $data['id'] ?? null;\n        $this->identifier = (string) ($data['identifier'] ?? null);\n    }\n\n    public function eraseCredentials(): void\n    {\n    }\n\n    public function getRoles(): array\n    {\n        $roles = $this->roles;\n\n        // guarantee every user at least has ROLE_USER\n        $roles[] = self::ROLES['user'];\n\n        return array_unique($roles);\n    }\n\n    /**\n     * @param array<string> $roles\n     */\n    public function setRoles(array $roles): self\n    {\n        $this->roles = $roles;\n\n        return $this;\n    }\n\n    public function getId(): ?int\n    {\n        return $this->id;\n    }\n\n    public function getIdentifier(): string\n    {\n        return $this->identifier;\n    }\n\n    public function getUserIdentifier(): string\n    {\n        return $this->identifier;\n    }\n\n    public function setIdentifier(string $identifier): self\n    {\n        $this->identifier = $identifier;\n\n        return $this;\n    }\n\n    /**\n     * @todo this method is required by the the rememberMe functionality :(\n     */\n    public function getPassword(): ?string\n    {\n        return null;\n    }\n\n    public function getGoogleId(): ?string\n    {\n        return $this->googleId;\n    }\n\n    public function setGoogleId(?string $googleId): self\n    {\n        $this->googleId = $googleId;\n\n        return $this;\n    }\n\n    public function getGitHubId(): ?int\n    {\n        return $this->gitHubId;\n    }\n\n    public function setGitHubId(?int $gitHubId): self\n    {\n        $this->gitHubId = $gitHubId;\n\n        return $this;\n    }\n\n    public function getGitLabId(): ?int\n    {\n        return $this->gitLabId;\n    }\n\n    public function setGitLabId(?int $gitLabId): self\n    {\n        $this->gitLabId = $gitLabId;\n\n        return $this;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Entity/User.php b/src/Entity/User.php
--- a/src/Entity/User.php	(revision 5bcf2ada33db60e11c9370b560947535d8ed2c68)
+++ b/src/Entity/User.php	(date 1674223129676)
@@ -37,6 +37,12 @@
     #[Column(type: Types::JSON)]
     private array $roles = [];
 
+    /**
+     * @var array<string>|null
+     */
+    #[Column(type: Types::JSON, nullable: true)]
+    private ?array $params = [];
+
     #[Column(length: 100, nullable: true)]
     private ?string $googleId = null;
 
@@ -93,6 +99,24 @@
     {
         $this->roles = $roles;
 
+        return $this;
+    }
+
+    /**
+     * @return array<string>|null
+     */
+    public function getParams(): ?array
+    {
+        return $this->params;
+    }
+
+    /**
+     * @param array<string> $params
+     */
+    public function setParams(array $params): self
+    {
+        $this->params = $params;
+
         return $this;
     }
 
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"dataSourceStorageLocal\" created-in=\"PS-223.8214.64\">\n    <data-source name=\"main@localhost\" uuid=\"c0cdd19a-8434-48d8-b232-87e9bff9ec47\">\n      <database-info product=\"PostgreSQL\" version=\"13.2\" jdbc-version=\"4.2\" driver-name=\"PostgreSQL JDBC Driver\" driver-version=\"42.3.3\" dbms=\"POSTGRES\" exact-version=\"13.2\" exact-driver-version=\"42.3\">\n        <identifier-quote-string>&quot;</identifier-quote-string>\n      </database-info>\n      <case-sensitivity plain-identifiers=\"lower\" quoted-identifiers=\"exact\" />\n      <secret-storage>master_key</secret-storage>\n      <user-name>main</user-name>\n      <schema-mapping>\n        <introspection-scope>\n          <node kind=\"database\" qname=\"@\">\n            <node kind=\"schema\" qname=\"@\" />\n          </node>\n        </introspection-scope>\n      </schema-mapping>\n    </data-source>\n    <data-source name=\"postgres_test@localhost\" uuid=\"f928eadd-a351-4a66-b292-5fa79420e180\">\n      <database-info product=\"PostgreSQL\" version=\"13.1\" jdbc-version=\"4.2\" driver-name=\"PostgreSQL JDBC Driver\" driver-version=\"42.2.5\" dbms=\"POSTGRES\" exact-version=\"13.1\" exact-driver-version=\"42.2\">\n        <identifier-quote-string>&quot;</identifier-quote-string>\n      </database-info>\n      <case-sensitivity plain-identifiers=\"lower\" quoted-identifiers=\"exact\" />\n      <secret-storage>master_key</secret-storage>\n      <user-name>main</user-name>\n      <schema-mapping>\n        <introspection-scope>\n          <node kind=\"database\" qname=\"@\">\n            <node kind=\"schema\" qname=\"@\" />\n          </node>\n        </introspection-scope>\n      </schema-mapping>\n    </data-source>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	(revision 5bcf2ada33db60e11c9370b560947535d8ed2c68)
+++ b/.idea/dataSources.local.xml	(date 1674127389770)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="PS-223.8214.64">
+  <component name="dataSourceStorageLocal" created-in="PS-223.8617.12">
     <data-source name="main@localhost" uuid="c0cdd19a-8434-48d8-b232-87e9bff9ec47">
       <database-info product="PostgreSQL" version="13.2" jdbc-version="4.2" driver-name="PostgreSQL JDBC Driver" driver-version="42.3.3" dbms="POSTGRES" exact-version="13.2" exact-driver-version="42.3">
         <identifier-quote-string>&quot;</identifier-quote-string>
